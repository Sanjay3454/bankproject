Angular 
-------
npm - node package manager  npm -v

     install 
           -npm i -g @angular/cli@latest    ng v 

     project creation 
           -ng new projectname 

    running command 
          -ng serve --open  ng s -o 

    Angular technologies 

    -html 
    -css 
    -typescript       -strictly type

    number:any 

    browser automatically convert typescript (ts) to javascript (js) - transpiling

    npm i - install node modules 

    -root modules 
      -root component(under root module)
         - we can create sub components inside root module (under root component)

         -sub modules 
            -components

            ......

            module-ts file manage all the components inside that module 
            component -ts html css 
               -selector  - used to display the component

               @ - decorators ( used to store metadata)

               metadata- warpped data - data inside data


               create new component 
               ---------------------

                   -ng generate component component_name
                  -  ng g c first



                  in index.js only works root component 
                  we can call other sub components in root component 


                  WORKING cycle of angular component
                  ----------------------------------

                  constructor -->ngoninit-->other methods  (ee order il anu working flow. adyam constructor pinne ...)

                  Data Binding in Angular
                  -------------------------
                  ts - component

                  html - view 

                  1-one way binding 
                  -----------------

                       1.1 ts to html (component to view data sharing )

                            1.1.1 - string interpollation {{}}
                            1.1.2 - property binding   [property_name]="data"

                     1.2 view to component (html to ts)
                         
                           1.2.1 event binding (eventname)="method"
                           1.2.2 $event binding (eventname)="method($event)"
                           1.2.3 event binding with template rendering variable #variableName

                   2-two way binding
                   ------------------        
                    2.1 ngModel [(ngModel)]="variable"
                             -FormsModule  -module used to apply ngModel


                    path setting in Angular
                    -----------------------
                    path set in root module routing file 
                    each page need dfrnt paths 
                    landing page path is empty 


                    Redirection in angular 
                    -------------------------
                  method - navigateByUrl(path)     
                  class -Router 
                  module - AppRoutingModule



                  folder- file - class - methods
                  package module     


                  dependency injection 
                  --------------------

                  to use a method of class in another class 

                  in constructor - accessspecifier reference:className
                            
                            
                            
                             access specifier -private / public 
                             -private : can use the injecting class only in that class 
                             -public : can use the injecting class in other classes of that file 

                  angular services 
                  ----------------

                  its a file in angular
                   all components can access the content of service file      
                     
                   -create     ng generate service filename        ng g s filename    


                   Angular Directives
                   ------------------
                   used to manipulate DOM 

                   1- component directives 
                   2- structural directives 
                        -*ngFor
                        -*ngIf
                   3. Atribute directives     
                        -[ngClass]

     Form validation in angular 
     --------------------------

     form creation in angular
           
           1.template in angular 
           2.model driven form 


     model driven form 
     -----------------


     -reactive form 

         -ReactiveFormsModule - module used to build model form    
         -FormBuilder         - class used to build model form   

         -a model contain  -form group 
                            -array 
                            -controller               



      Local storage in angular
      ------------------------                    
      C - localStorage.setItem()
      R - localStorage.getItem()
      U - localStorage.setItem()
      D-  localStorage.removeItem()


      child parent communication in angular 
      --------------------------------------

      parent - child data sharing 
      ----------------------------
      @input() -  decorator used to share data from parent to child 


      Date and time in Angular
      ------------------------

      Date - class used to access current date data in angular 

      Angular Pipes
      -------------

      used to convert datas to another format 


      child - parent data sharing 
      ---------------------------

      used to convert datas to another format 

      Event Creation In Angular (user defined events)
      ------------------------------------------------

      EventEmitter - class used to create events 

      emit() -  method  to specify when the event happens


      API creation in angular 
      -----------------------

      HttpClientModule -module 
      HttpClient       -class

      methods
      -------
      get post put patch delete  



      asynchronous in js

      promise - then()
               - catch()
asynchronous in ts               library - rxjs {reactive extension for js}
    
      observable -subscribe()
                 - catch()

  ---------------------------------------               


  Headers Creation In Angualar
  ----------------------------

  HttpHeaders - class used to generate Headers
